{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lukatoni/Repositories/NextProjects/invoice-creator/pages/index.tsx\";\nimport Auth from '../components/Auth';\nimport Account from '../components/Account';\nimport ProfileList from '../components/ProfileList';\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport Footer from '../components/Footer';\nexport default function Home() {\n  var _session$user;\n\n  const {\n    0: session,\n    1: setSession\n  } = useState(null);\n  const {\n    0: profiles,\n    1: setProfiles\n  } = useState([]);\n  useEffect(() => {\n    setSession(supabase.auth.session());\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n  useEffect(() => {\n    getPublicProfiles();\n  }, []);\n\n  async function getPublicProfiles() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('profiles').select('id, username, avatar_url, website, updated_at').order('updated_at', {\n        ascending: false\n      });\n\n      if (error || !data) {\n        throw error || new Error('No data');\n      }\n\n      console.log('Public profiles:', data);\n      setProfiles(data);\n    } catch (error) {\n      console.log('error', error.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: '50px 0 100px 0'\n    },\n    children: [!session ? /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          session: session\n        }, session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Public Profiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileList, {\n          profiles: profiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/lukatoni/Repositories/NextProjects/invoice-creator/pages/index.tsx"],"names":["Auth","Account","ProfileList","useState","useEffect","supabase","Footer","Home","session","setSession","profiles","setProfiles","auth","onAuthStateChange","_event","getPublicProfiles","data","error","from","select","order","ascending","Error","console","log","message","padding","user","id"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAqB,IAArB,CAAtC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAY,EAAZ,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAACJ,QAAQ,CAACO,IAAT,CAAcJ,OAAd,EAAD,CAAV;AAEAH,IAAAA,QAAQ,CAACO,IAAT,CAAcC,iBAAd,CAAgC,CAACC,MAAD,EAAiBN,OAAjB,KAAiD;AAC/EC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,iBAAf,GAAmC;AACjC,QAAI;AACF,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,MAAMZ,QAAQ,CACnCa,IAD2B,CACb,UADa,EAE3BC,MAF2B,CAEpB,+CAFoB,EAG3BC,KAH2B,CAGrB,YAHqB,EAGP;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAHO,CAA9B;;AAKA,UAAIJ,KAAK,IAAI,CAACD,IAAd,EAAoB;AAClB,cAAMC,KAAK,IAAI,IAAIK,KAAJ,CAAU,SAAV,CAAf;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,IAAhC;AACAL,MAAAA,WAAW,CAACK,IAAD,CAAX;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAAK,CAACQ,OAA3B;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAlC;AAAA,eACG,CAAClB,OAAD,gBACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAiC,UAAA,OAAO,EAAEA;AAA1C,WAAcA,OAAd,aAAcA,OAAd,wCAAcA,OAAO,CAAEmB,IAAvB,kDAAc,cAAeC,EAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAElB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAgBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD","sourcesContent":["import Auth from '../components/Auth'\nimport Account from '../components/Account'\nimport ProfileList from '../components/ProfileList'\nimport { useState, useEffect } from 'react'\nimport { supabase } from '../lib/supabaseClient'\nimport { AuthSession } from '@supabase/supabase-js'\nimport { Profile } from '../lib/constants'\nimport Footer from '../components/Footer'\n\nexport default function Home() {\n  const [session, setSession] = useState<AuthSession | null>(null)\n  const [profiles, setProfiles] = useState<Profile[]>([])\n\n  useEffect(() => {\n    setSession(supabase.auth.session())\n\n    supabase.auth.onAuthStateChange((_event: string, session: AuthSession | null) => {\n      setSession(session)\n    })\n  }, [])\n\n  useEffect(() => {\n    getPublicProfiles()\n  }, [])\n\n  async function getPublicProfiles() {\n    try {\n      const { data, error } = await supabase\n        .from<Profile>('profiles')\n        .select('id, username, avatar_url, website, updated_at')\n        .order('updated_at', { ascending: false })\n\n      if (error || !data) {\n        throw error || new Error('No data')\n      }\n      console.log('Public profiles:', data)\n      setProfiles(data)\n    } catch (error) {\n      console.log('error', error.message)\n    }\n  }\n\n  return (\n    <div className=\"container\" style={{ padding: '50px 0 100px 0' }}>\n      {!session ? (\n        <Auth />\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h3>Account</h3>\n            <Account key={session?.user?.id} session={session} />\n          </div>\n          <div className=\"col-6\">\n            <h3>Public Profiles</h3>\n            <ProfileList profiles={profiles} />\n          </div>\n        </div>\n      )}\n\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Auth.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useStore } from '../lib/store';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport PasswordReset from './PasswordReset';\n\nvar Auth = function Auth() {\n  _s();\n\n  var state = useStore();\n  return;\n  {\n    state.authView === 'sign_in' ? /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, _this) : state.authView === 'sign_up' ? /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, _this) : state.authView === 'forgotten_password' ? /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, _this) : null;\n  }\n};\n\n_s(Auth, \"CANA8TH2VAS9sw+l6C+Kg8RQBso=\", false, function () {\n  return [useStore];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Auth.tsx"],"names":["useStore","SignIn","SignUp","PasswordReset","Auth","state","authView"],"mappings":";;;;;;AACA,SAAQA,QAAR,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAEjB,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACG;AACH;AACEK,IAAAA,KAAK,CAACC,QAAN,KAAmB,SAAnB,gBACD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADC,GAESD,KAAK,CAACC,QAAN,KAAmB,SAAnB,gBACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADA,GAEED,KAAK,CAACC,QAAN,KAAmB,oBAAnB,gBACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aADA,GAEP,IANJ;AAOD;AAIF,CAhBD;;GAAMF,I;UAEUJ,Q;;;KAFVI,I;AAkBN,eAAeA,IAAf","sourcesContent":["\nimport {useStore } from '../lib/store';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport PasswordReset from './PasswordReset';\n  \nconst Auth = () => {\n\n  const state = useStore();\n     return \n  {\n    state.authView === 'sign_in' ? (\n   <SignIn/>\n         ) : state.authView === 'sign_up' ? (\n             <SignUp/>\n           ) : state.authView === 'forgotten_password' ? (\n               <PasswordReset/>\n    ) : null\n  }\n    \n\n     \n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}
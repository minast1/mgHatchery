{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Account.tsx\";\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport UploadButton from '../components/UploadButton';\nimport Avatar from './Avatar';\nimport { DEFAULT_AVATARS_BUCKET } from '../lib/constants';\nexport default function Account({\n  session\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const {\n    0: avatar,\n    1: setAvatar\n  } = useState(null);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(null);\n  const {\n    0: website,\n    1: setWebsite\n  } = useState(null);\n  useEffect(() => {\n    getProfile();\n  }, [session]);\n\n  async function signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) console.log('Error logging out:', error.message);\n  }\n\n  async function uploadAvatar(event) {\n    try {\n      setUploading(true);\n\n      if (!event.target.files || event.target.files.length == 0) {\n        throw 'You must select an image to upload.';\n      }\n\n      const user = supabase.auth.user();\n      const file = event.target.files[0];\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${session === null || session === void 0 ? void 0 : session.user.id}${Math.random()}.${fileExt}`;\n      const filePath = `${fileName}`;\n      let {\n        error: uploadError\n      } = await supabase.storage.from(DEFAULT_AVATARS_BUCKET).upload(filePath, file);\n\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      let {\n        error: updateError\n      } = await supabase.from('profiles').upsert({\n        id: user.id,\n        avatar_url: filePath\n      });\n\n      if (updateError) {\n        throw updateError;\n      }\n\n      setAvatar(null);\n      setAvatar(filePath);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setUploading(false);\n    }\n  }\n\n  function setProfile(profile) {\n    setAvatar(profile.avatar_url);\n    setUsername(profile.username);\n    setWebsite(profile.website);\n  }\n\n  async function getProfile() {\n    try {\n      setLoading(true);\n      const user = supabase.auth.user();\n      let {\n        data,\n        error\n      } = await supabase.from('profiles').select(`username, website, avatar_url`).eq('id', user.id).single();\n\n      if (error) {\n        throw error;\n      }\n\n      setProfile(data);\n    } catch (error) {\n      console.log('error', error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function updateProfile() {\n    try {\n      setLoading(true);\n      const user = supabase.auth.user();\n      const updates = {\n        id: user.id,\n        username,\n        website,\n        updated_at: new Date()\n      };\n      let {\n        error\n      } = await supabase.from('profiles').upsert(updates, {\n        returning: 'minimal' // Don't return the value after inserting\n\n      });\n\n      if (error) {\n        throw error;\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"avatar\",\n        children: \"Avatar image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatarField\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatarContainer\",\n          children: avatar ? /*#__PURE__*/_jsxDEV(Avatar, {\n            url: avatar,\n            size: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatarPlaceholder\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n          onUpload: uploadAvatar,\n          loading: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        value: session.user.email,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username || '',\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"website\",\n        children: \"Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"website\",\n        type: \"website\",\n        value: website || '',\n        onChange: e => setWebsite(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button block primary\",\n        onClick: () => updateProfile(),\n        disabled: loading,\n        children: loading ? 'Loading ...' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button block\",\n        onClick: () => signOut(),\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Account.tsx"],"names":["useState","useEffect","supabase","UploadButton","Avatar","DEFAULT_AVATARS_BUCKET","Account","session","loading","setLoading","uploading","setUploading","avatar","setAvatar","username","setUsername","website","setWebsite","getProfile","signOut","error","auth","console","log","message","uploadAvatar","event","target","files","length","user","file","fileExt","name","split","pop","fileName","id","Math","random","filePath","uploadError","storage","from","upload","updateError","upsert","avatar_url","alert","setProfile","profile","data","select","eq","single","updateProfile","updates","updated_at","Date","returning","email","e","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react'\nimport { supabase } from '../lib/supabaseClient'\nimport UploadButton from '../components/UploadButton'\nimport Avatar from './Avatar'\nimport { AuthSession } from '@supabase/supabase-js'\nimport { DEFAULT_AVATARS_BUCKET, Profile } from '../lib/constants'\n\nexport default function Account({ session }: { session: AuthSession }) {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [uploading, setUploading] = useState<boolean>(false)\n  const [avatar, setAvatar] = useState<string | null>(null)\n  const [username, setUsername] = useState<string | null>(null)\n  const [website, setWebsite] = useState<string | null>(null)\n\n  useEffect(() => {\n    getProfile()\n  }, [session])\n\n  async function signOut() {\n    const { error } = await supabase.auth.signOut()\n    if (error) console.log('Error logging out:', error.message)\n  }\n\n  async function uploadAvatar(event: ChangeEvent<HTMLInputElement>) {\n    try {\n      setUploading(true)\n\n      if (!event.target.files || event.target.files.length == 0) {\n        throw 'You must select an image to upload.'\n      }\n\n      const user = supabase.auth.user()\n      const file = event.target.files[0]\n      const fileExt = file.name.split('.').pop()\n      const fileName = `${session?.user.id}${Math.random()}.${fileExt}`\n      const filePath = `${fileName}`\n\n      let { error: uploadError } = await supabase.storage\n        .from(DEFAULT_AVATARS_BUCKET)\n        .upload(filePath, file)\n\n      if (uploadError) {\n        throw uploadError\n      }\n\n      let { error: updateError } = await supabase.from('profiles').upsert({\n        id: user!.id,\n        avatar_url: filePath,\n      })\n\n      if (updateError) {\n        throw updateError\n      }\n\n      setAvatar(null)\n      setAvatar(filePath)\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  function setProfile(profile: Profile) {\n    setAvatar(profile.avatar_url)\n    setUsername(profile.username)\n    setWebsite(profile.website)\n  }\n\n  async function getProfile() {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      let { data, error } = await supabase\n        .from('profiles')\n        .select(`username, website, avatar_url`)\n        .eq('id', user!.id)\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      setProfile(data)\n    } catch (error) {\n      console.log('error', error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function updateProfile() {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      const updates = {\n        id: user!.id,\n        username,\n        website,\n        updated_at: new Date(),\n      }\n\n      let { error } = await supabase.from('profiles').upsert(updates, {\n        returning: 'minimal', // Don't return the value after inserting\n      })\n\n      if (error) {\n        throw error\n      }\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"account\">\n      <div>\n        <label htmlFor=\"avatar\">Avatar image</label>\n        <div className=\"avatarField\">\n          <div className=\"avatarContainer\">\n            {avatar ? (\n              <Avatar url={avatar} size={35} />\n            ) : (\n              <div className=\"avatarPlaceholder\">?</div>\n            )}\n          </div>\n          <UploadButton onUpload={uploadAvatar} loading={uploading} />\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input id=\"email\" type=\"text\" value={session.user.email} disabled />\n      </div>\n      <div>\n        <label htmlFor=\"username\">Name</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={username || ''}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          type=\"website\"\n          value={website || ''}\n          onChange={(e) => setWebsite(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <button className=\"button block primary\" onClick={() => updateProfile()} disabled={loading}>\n          {loading ? 'Loading ...' : 'Update'}\n        </button>\n      </div>\n\n      <div>\n        <button className=\"button block\" onClick={() => signOut()}>\n          Sign Out\n        </button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
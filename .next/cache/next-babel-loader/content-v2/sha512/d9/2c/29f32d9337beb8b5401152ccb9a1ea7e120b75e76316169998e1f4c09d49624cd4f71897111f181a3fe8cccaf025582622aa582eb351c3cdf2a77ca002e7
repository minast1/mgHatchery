{"ast":null,"code":"import _regeneratorRuntime from \"/home/lukatoni/Repositories/NextProjects/invoice-creator/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/lukatoni/Repositories/NextProjects/invoice-creator/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Account.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport UploadButton from '../components/UploadButton';\nimport Avatar from './Avatar';\nimport { DEFAULT_AVATARS_BUCKET } from '../lib/constants';\nexport default function Account(_ref) {\n  _s();\n\n  var session = _ref.session;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var _useState3 = useState(null),\n      avatar = _useState3[0],\n      setAvatar = _useState3[1];\n\n  var _useState4 = useState(null),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(null),\n      website = _useState5[0],\n      setWebsite = _useState5[1];\n\n  useEffect(function () {\n    getProfile();\n  }, [session]);\n\n  function signOut() {\n    return _signOut.apply(this, arguments);\n  }\n\n  function _signOut() {\n    _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$supabase$auth$, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return supabase.auth.signOut();\n\n            case 2:\n              _yield$supabase$auth$ = _context.sent;\n              error = _yield$supabase$auth$.error;\n              if (error) console.log('Error logging out:', error.message);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _signOut.apply(this, arguments);\n  }\n\n  function uploadAvatar(_x) {\n    return _uploadAvatar.apply(this, arguments);\n  }\n\n  function _uploadAvatar() {\n    _uploadAvatar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var user, file, fileExt, fileName, filePath, _yield$supabase$stora, uploadError, _yield$supabase$from$, updateError;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setUploading(true);\n\n              if (!(!event.target.files || event.target.files.length == 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              throw 'You must select an image to upload.';\n\n            case 4:\n              user = supabase.auth.user();\n              file = event.target.files[0];\n              fileExt = file.name.split('.').pop();\n              fileName = \"\".concat(session === null || session === void 0 ? void 0 : session.user.id).concat(Math.random(), \".\").concat(fileExt);\n              filePath = \"\".concat(fileName);\n              _context2.next = 11;\n              return supabase.storage.from(DEFAULT_AVATARS_BUCKET).upload(filePath, file);\n\n            case 11:\n              _yield$supabase$stora = _context2.sent;\n              uploadError = _yield$supabase$stora.error;\n\n              if (!uploadError) {\n                _context2.next = 15;\n                break;\n              }\n\n              throw uploadError;\n\n            case 15:\n              _context2.next = 17;\n              return supabase.from('profiles').upsert({\n                id: user.id,\n                avatar_url: filePath\n              });\n\n            case 17:\n              _yield$supabase$from$ = _context2.sent;\n              updateError = _yield$supabase$from$.error;\n\n              if (!updateError) {\n                _context2.next = 21;\n                break;\n              }\n\n              throw updateError;\n\n            case 21:\n              setAvatar(null);\n              setAvatar(filePath);\n              _context2.next = 28;\n              break;\n\n            case 25:\n              _context2.prev = 25;\n              _context2.t0 = _context2[\"catch\"](0);\n              alert(_context2.t0.message);\n\n            case 28:\n              _context2.prev = 28;\n              setUploading(false);\n              return _context2.finish(28);\n\n            case 31:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 25, 28, 31]]);\n    }));\n    return _uploadAvatar.apply(this, arguments);\n  }\n\n  function setProfile(profile) {\n    setAvatar(profile.avatar_url);\n    setUsername(profile.username);\n    setWebsite(profile.website);\n  }\n\n  function getProfile() {\n    return _getProfile.apply(this, arguments);\n  }\n\n  function _getProfile() {\n    _getProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var user, _yield$supabase$from$2, data, error;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setLoading(true);\n              user = supabase.auth.user();\n              _context3.next = 5;\n              return supabase.from('profiles').select(\"username, website, avatar_url\").eq('id', user.id).single();\n\n            case 5:\n              _yield$supabase$from$2 = _context3.sent;\n              data = _yield$supabase$from$2.data;\n              error = _yield$supabase$from$2.error;\n\n              if (!error) {\n                _context3.next = 10;\n                break;\n              }\n\n              throw error;\n\n            case 10:\n              setProfile(data);\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log('error', _context3.t0.message);\n\n            case 16:\n              _context3.prev = 16;\n              setLoading(false);\n              return _context3.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 13, 16, 19]]);\n    }));\n    return _getProfile.apply(this, arguments);\n  }\n\n  function updateProfile() {\n    return _updateProfile.apply(this, arguments);\n  }\n\n  function _updateProfile() {\n    _updateProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var user, updates, _yield$supabase$from$3, error;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              setLoading(true);\n              user = supabase.auth.user();\n              updates = {\n                id: user.id,\n                username: username,\n                website: website,\n                updated_at: new Date()\n              };\n              _context4.next = 6;\n              return supabase.from('profiles').upsert(updates, {\n                returning: 'minimal' // Don't return the value after inserting\n\n              });\n\n            case 6:\n              _yield$supabase$from$3 = _context4.sent;\n              error = _yield$supabase$from$3.error;\n\n              if (!error) {\n                _context4.next = 10;\n                break;\n              }\n\n              throw error;\n\n            case 10:\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              alert(_context4.t0.message);\n\n            case 15:\n              _context4.prev = 15;\n              setLoading(false);\n              return _context4.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12, 15, 18]]);\n    }));\n    return _updateProfile.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"avatar\",\n        children: \"Avatar image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatarField\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatarContainer\",\n          children: avatar ? /*#__PURE__*/_jsxDEV(Avatar, {\n            url: avatar,\n            size: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatarPlaceholder\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n          onUpload: uploadAvatar,\n          loading: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        value: session.user.email,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username || '',\n        onChange: function onChange(e) {\n          return setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"website\",\n        children: \"Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"website\",\n        type: \"website\",\n        value: website || '',\n        onChange: function onChange(e) {\n          return setWebsite(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button block primary\",\n        onClick: function onClick() {\n          return updateProfile();\n        },\n        disabled: loading,\n        children: loading ? 'Loading ...' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button block\",\n        onClick: function onClick() {\n          return signOut();\n        },\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"+JQ6grt2rhI2SkODNsHKTRFFgog=\");\n\n_c = Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Account.tsx"],"names":["useState","useEffect","supabase","UploadButton","Avatar","DEFAULT_AVATARS_BUCKET","Account","session","loading","setLoading","uploading","setUploading","avatar","setAvatar","username","setUsername","website","setWebsite","getProfile","signOut","auth","error","console","log","message","uploadAvatar","event","target","files","length","user","file","fileExt","name","split","pop","fileName","id","Math","random","filePath","storage","from","upload","uploadError","upsert","avatar_url","updateError","alert","setProfile","profile","select","eq","single","data","updateProfile","updates","updated_at","Date","returning","email","e","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react'\nimport { supabase } from '../lib/supabaseClient'\nimport UploadButton from '../components/UploadButton'\nimport Avatar from './Avatar'\nimport { AuthSession } from '@supabase/supabase-js'\nimport { DEFAULT_AVATARS_BUCKET, Profile } from '../lib/constants'\n\nexport default function Account({ session }: { session: AuthSession }) {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [uploading, setUploading] = useState<boolean>(false)\n  const [avatar, setAvatar] = useState<string | null>(null)\n  const [username, setUsername] = useState<string | null>(null)\n  const [website, setWebsite] = useState<string | null>(null)\n\n  useEffect(() => {\n    getProfile()\n  }, [session])\n\n  async function signOut() {\n    const { error } = await supabase.auth.signOut()\n    if (error) console.log('Error logging out:', error.message)\n  }\n\n  async function uploadAvatar(event: ChangeEvent<HTMLInputElement>) {\n    try {\n      setUploading(true)\n\n      if (!event.target.files || event.target.files.length == 0) {\n        throw 'You must select an image to upload.'\n      }\n\n      const user = supabase.auth.user()\n      const file = event.target.files[0]\n      const fileExt = file.name.split('.').pop()\n      const fileName = `${session?.user.id}${Math.random()}.${fileExt}`\n      const filePath = `${fileName}`\n\n      let { error: uploadError } = await supabase.storage\n        .from(DEFAULT_AVATARS_BUCKET)\n        .upload(filePath, file)\n\n      if (uploadError) {\n        throw uploadError\n      }\n\n      let { error: updateError } = await supabase.from('profiles').upsert({\n        id: user!.id,\n        avatar_url: filePath,\n      })\n\n      if (updateError) {\n        throw updateError\n      }\n\n      setAvatar(null)\n      setAvatar(filePath)\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  function setProfile(profile: Profile) {\n    setAvatar(profile.avatar_url)\n    setUsername(profile.username)\n    setWebsite(profile.website)\n  }\n\n  async function getProfile() {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      let { data, error } = await supabase\n        .from('profiles')\n        .select(`username, website, avatar_url`)\n        .eq('id', user!.id)\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      setProfile(data)\n    } catch (error) {\n      console.log('error', error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function updateProfile() {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      const updates = {\n        id: user!.id,\n        username,\n        website,\n        updated_at: new Date(),\n      }\n\n      let { error } = await supabase.from('profiles').upsert(updates, {\n        returning: 'minimal', // Don't return the value after inserting\n      })\n\n      if (error) {\n        throw error\n      }\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"account\">\n      <div>\n        <label htmlFor=\"avatar\">Avatar image</label>\n        <div className=\"avatarField\">\n          <div className=\"avatarContainer\">\n            {avatar ? (\n              <Avatar url={avatar} size={35} />\n            ) : (\n              <div className=\"avatarPlaceholder\">?</div>\n            )}\n          </div>\n          <UploadButton onUpload={uploadAvatar} loading={uploading} />\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input id=\"email\" type=\"text\" value={session.user.email} disabled />\n      </div>\n      <div>\n        <label htmlFor=\"username\">Name</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={username || ''}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          type=\"website\"\n          value={website || ''}\n          onChange={(e) => setWebsite(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <button className=\"button block primary\" onClick={() => updateProfile()} disabled={loading}>\n          {loading ? 'Loading ...' : 'Update'}\n        </button>\n      </div>\n\n      <div>\n        <button className=\"button block\" onClick={() => signOut()}>\n          Sign Out\n        </button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Auth.tsx\";\nimport { createStore, Provider, useStore } from '../lib/store';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport PasswordReset from './PasswordReset';\n\nconst Auth = () => {\n  const authView = useStore(state => state.authView);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    createStore: createStore,\n    children: authView === 'sign_in' ? /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this) : authView === 'sign_up' ? /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this) : authView === 'forgotten_password' ? /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 8\n  }, this);\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/lukatoni/Repositories/NextProjects/invoice-creator/components/Auth.tsx"],"names":["createStore","Provider","useStore","SignIn","SignUp","PasswordReset","Auth","authView","state"],"mappings":";;AAEA,SAA2BA,WAA3B,EAAwCC,QAAxC,EAAkDC,QAAlD,QAAiE,cAAjE;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGL,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAAzB;AACG,sBACE,QAAC,QAAD;AAAU,IAAA,WAAW,EAAEP,WAAvB;AAAA,cACGO,QAAQ,KAAK,SAAb,gBACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADO,GAEGA,QAAQ,KAAK,SAAb,gBACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,GAEEA,QAAQ,KAAK,oBAAb,gBACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADA,GAEF;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAYJ,CAdD;;AAgBA,eAAeD,IAAf","sourcesContent":["\nimport { supabase } from '../lib/supabaseClient'\nimport { authContextState, createStore, Provider, useStore} from '../lib/store';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport PasswordReset from './PasswordReset';\n  \nconst Auth = () => {\n  const authView = useStore(state => state.authView)\n     return (\n       <Provider createStore={createStore}>\n         {authView === 'sign_in' ? (\n   <SignIn/>\n         ) : authView === 'sign_up' ? (\n             <SignUp/>\n           ) : authView === 'forgotten_password' ? (\n               <PasswordReset/>\n         ) : null }\n    \n    </Provider>\n     )\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}